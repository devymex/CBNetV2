CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)
PROJECT(TrtPlugin LANGUAGES CXX)

# Settings
# --------
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_EXTENSIONS OFF)
SET(CMAKE_CUDA_STANDARD 14)
SET(CMAKE_CUDA_STANDARD_REQUIRED ON)
SET(CMAKE_CUDA_COMPILER "/usr/local/cuda/bin/nvcc")
SET(CMAKE_POSITION_INDEPENDENT_CODE ON)
SET(CMAKE_SKIP_RPATH ON)
ENABLE_LANGUAGE(CUDA)

# User Options
# ------------
OPTION(CUDA_ARCHITECTURES "CUDA Architectures" "75")

# Dependencies
# ------------
LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
FIND_PACKAGE(OpenMP REQUIRED)
FIND_PACKAGE(CUDAToolkit REQUIRED)
FIND_PACKAGE(TensorRT REQUIRED)

# Compiler Options
#-----------------
SET(COMPILE_DEFINITIONS "-DCUDA_VERSION_MINOR=${CUDA_VERSION_MINOR}")

IF(CMAKE_BUILD_TYPE STREQUAL "")
    SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

STRING(TOUPPER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE)
IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
    LIST(APPEND COMPILE_DEFINITIONS -DVERBOSE_LOG)
ENDIF()

# Build trtconv
# ------------------
FILE(GLOB_RECURSE SRC_FILES "${CMAKE_SOURCE_DIR}/trt/src/*.cpp" "${CMAKE_SOURCE_DIR}/trt/trtconv.cpp")
ADD_EXECUTABLE(trtconv ${SRC_FILES})
SET_SOURCE_FILES_PROPERTIES(${CUDA_KERNELS_SRC}
    PROPERTIES
        LANGUAGE CUDA
    )
SET_TARGET_PROPERTIES(trtconv
    PROPERTIES
        CUDA_ARCHITECTURES ${CUDA_ARCHITECTURES}
    )
TARGET_COMPILE_DEFINITIONS(trtconv
    PRIVATE
        ${COMPILE_DEFINITIONS}
    )
TARGET_COMPILE_OPTIONS(trtconv
    PRIVATE
        ${OpenMP_CXX_FLAGS}
    )
TARGET_INCLUDE_DIRECTORIES(trtconv
    PRIVATE
        ${CUDA_INCLUDE_DIRS}
        ${TensorRT_INC_DIR}
    )
TARGET_LINK_OPTIONS(trtconv
    PRIVATE
        ${OpenMP_EXE_LINKER_FLAGS}
        ${OpenMP_CXX_FLAGS}
    )
TARGET_LINK_LIBRARIES(trtconv
    PUBLIC
        ${TensorRT_LIBRARIES}
        ${CUDA_LIBRARIES}
        CUDA::cudart
        glog
        stdc++fs
    )

# Build trtinfer
# ------------------
FILE(GLOB_RECURSE SRC_FILES "${CMAKE_SOURCE_DIR}/trt/src/*.cpp" "${CMAKE_SOURCE_DIR}/trt/trtinfer.cpp")
ADD_EXECUTABLE(trtinfer ${SRC_FILES})
SET_SOURCE_FILES_PROPERTIES(${CUDA_KERNELS_SRC}
    PROPERTIES
        LANGUAGE CUDA
    )
SET_TARGET_PROPERTIES(trtinfer
    PROPERTIES
        CUDA_ARCHITECTURES ${CUDA_ARCHITECTURES}
    )
TARGET_COMPILE_DEFINITIONS(trtinfer
    PRIVATE
        ${COMPILE_DEFINITIONS}
    )
TARGET_COMPILE_OPTIONS(trtinfer
    PRIVATE
        ${OpenMP_CXX_FLAGS}
    )
TARGET_INCLUDE_DIRECTORIES(trtinfer
    PRIVATE
        ${CUDA_INCLUDE_DIRS}
        ${TensorRT_INC_DIR}
    )
TARGET_LINK_OPTIONS(trtinfer
    PRIVATE
        ${OpenMP_EXE_LINKER_FLAGS}
        ${OpenMP_CXX_FLAGS}
    )
TARGET_LINK_LIBRARIES(trtinfer
    PUBLIC
        ${TensorRT_LIBRARIES}
        ${CUDA_LIBRARIES}
        CUDA::cudart
        glog
        stdc++fs
    )
